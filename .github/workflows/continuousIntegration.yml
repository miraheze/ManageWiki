name: Continuous integration

on:
  create:
  push:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    name: Test and lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-versions: ['7.3', '7.4']
    steps:
    - uses: actions/checkout@v2
      
    - name: Install dependencies
      run: |
        composer validate
        npm install --save-dev
        composer install --prefer-dist --no-progress
        sudo pecl install ast
        echo "extension=ast" | sudo tee -a /etc/php/8.0/cli/php.ini

    # Bypass the phpcbf non-standard exit code  
    - name: Check PHP
      run: |
        sh phpcbf.sh
        composer fix
        composer test

    - name: Check JavaScript
      run: |
        npm run lint:fix:js
        npm run lint:js

    - name: Check styles
      run: |
        npm run lint:fix:styles
        npm run lint:styles

#    - name: Check i18n
#      run: |
#        npm run lint:i18n

    - name: Clone MediaWiki
      run: |
        git clone https://github.com/miraheze/mediawiki.git --depth=1
        cd mediawiki
        git submodule update --init extensions/CreateWiki
        composer install --no-dev
        cd ..

    - name: Run phan
      run: |
        composer phan

    # Only patch code when it is a push event
    - name: Push the changes
      if: github.event_name == 'push'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git config --global user.name "github-actions"
        git config --global user.email "github-actions@users.noreply.github.com"
        git remote set-url origin "https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git"
        git add .
        git commit -am "CI: lint code to MediaWiki standards" -m "Check commit and GitHub actions for more details" || echo "No changes to commit"
        git pull --rebase
        git push

  notify-irc:
    needs: test
    runs-on: ubuntu-latest
    if: ${{ always() && github.repository_owner == 'miraheze' && ( github.ref	== 'refs/heads/master' || github.event_name == 'pull_request' ) }}
    steps:
      - name: succeeded
        uses: technote-space/workflow-conclusion-action@v2
      - uses: rectalogic/notify-irc@v1
        if: env.WORKFLOW_CONCLUSION == 'success'
        with:
          channel: "#miraheze-sre"
          server: "irc.libera.chat"
          nickname: miraheze-github
          message: ${{ github.repository }} - ${{ github.actor }} the build passed.
          sasl_password: ${{ secrets.IRC_MIRAHEZEBOTS }}
      - name: failed
        uses: technote-space/workflow-conclusion-action@v2
      - uses: rectalogic/notify-irc@v1
        if: env.WORKFLOW_CONCLUSION == 'failure'
        with:
          channel: "#miraheze-sre"
          server: "irc.libera.chat"
          nickname: miraheze-github
          message: ${{ github.repository }} - ${{ github.actor }} the build has errored.
          sasl_password: ${{ secrets.IRC_MIRAHEZEBOTS }}
      - name: cancelled
        uses: technote-space/workflow-conclusion-action@v2
      - uses: rectalogic/notify-irc@v1
        if: env.WORKFLOW_CONCLUSION == 'cancelled'
        with:
          channel: "#miraheze-sre"
          server: "irc.libera.chat"
          nickname: miraheze-github
          message: ${{ github.repository }} - ${{ github.actor }} the build has been cancelled.
          sasl_password: ${{ secrets.IRC_MIRAHEZEBOTS }}
