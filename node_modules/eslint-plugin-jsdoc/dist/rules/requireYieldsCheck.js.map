{"version":3,"sources":["../../src/rules/requireYieldsCheck.js"],"names":["canSkip","utils","settings","voidingTags","mode","push","hasATag","isConstructor","classHasTag","checkTagName","report","tagName","preferredTagName","getPreferredTagName","tags","getTags","length","context","next","checkGeneratorsOnly","options","preferredYieldTagName","yieldTag","shouldReportYields","isGenerator","hasDefinedTypeTag","hasYieldValue","preferredNextTagName","nextTag","shouldReportNext","hasYieldReturnValue","meta","docs","description","url","schema","additionalProperties","properties","default","type","contexts","items","exemptedBy"],"mappings":"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","sourcesContent":["import iterateJsdoc from '../iterateJsdoc';\n\nconst canSkip = (utils, settings) => {\n  const voidingTags = [\n    // An abstract function is by definition incomplete\n    // so it is perfectly fine if a yield is documented but\n    // not present within the function.\n    // A subclass may inherit the doc and implement the\n    // missing yield.\n    'abstract',\n    'virtual',\n\n    // Constructor functions do not have a yield value\n    //  so we can bail here, too.\n    'class',\n    'constructor',\n\n    // This seems to imply a class as well\n    'interface',\n  ];\n\n  if (settings.mode === 'closure') {\n    // Structural Interface in GCC terms, equivalent to @interface tag as far as this rule is concerned\n    voidingTags.push('record');\n  }\n\n  return utils.hasATag(voidingTags) ||\n    utils.isConstructor() ||\n    utils.classHasTag('interface') ||\n    settings.mode === 'closure' && utils.classHasTag('record');\n};\n\nconst checkTagName = (utils, report, tagName) => {\n  const preferredTagName = utils.getPreferredTagName({tagName});\n  if (!preferredTagName) {\n    return [];\n  }\n\n  const tags = utils.getTags(preferredTagName);\n\n  if (tags.length === 0) {\n    return [];\n  }\n\n  if (tags.length > 1) {\n    report(`Found more than one @${preferredTagName} declaration.`);\n\n    return [];\n  }\n\n  return [preferredTagName, tags[0]];\n};\n\nexport default iterateJsdoc(({\n  context,\n  report,\n  settings,\n  utils,\n}) => {\n  if (canSkip(utils, settings)) {\n    return;\n  }\n\n  const {\n    next = false,\n    checkGeneratorsOnly = false,\n  } = context.options[0] || {};\n\n  const [preferredYieldTagName, yieldTag] = checkTagName(\n    utils, report, 'yields',\n  );\n  if (preferredYieldTagName) {\n    const shouldReportYields = () => {\n      if (checkGeneratorsOnly && !utils.isGenerator()) {\n        return true;\n      }\n\n      return utils.hasDefinedTypeTag(yieldTag) && !utils.hasYieldValue();\n    };\n\n    // In case a yield value is declared in JSDoc, we also expect one in the code.\n    if (shouldReportYields()) {\n      report(`JSDoc @${preferredYieldTagName} declaration present but yield expression not available in function.`);\n    }\n  }\n\n  if (next) {\n    const [preferredNextTagName, nextTag] = checkTagName(\n      utils, report, 'next',\n    );\n    if (preferredNextTagName) {\n      const shouldReportNext = () => {\n        if (checkGeneratorsOnly && !utils.isGenerator()) {\n          return true;\n        }\n\n        return utils.hasDefinedTypeTag(nextTag) && !utils.hasYieldReturnValue();\n      };\n\n      if (shouldReportNext()) {\n        report(`JSDoc @${preferredNextTagName} declaration present but yield expression with return value not available in function.`);\n      }\n    }\n  }\n}, {\n  meta: {\n    docs: {\n      description: 'Requires a yield statement in function body if a `@yields` tag is specified in jsdoc comment.',\n      url: 'https://github.com/gajus/eslint-plugin-jsdoc#eslint-plugin-jsdoc-rules-require-yields-check',\n    },\n    schema: [\n      {\n        additionalProperties: false,\n        properties: {\n          checkGeneratorsOnly: {\n            default: false,\n            type: 'boolean',\n          },\n          contexts: {\n            items: {\n              type: 'string',\n            },\n            type: 'array',\n          },\n          exemptedBy: {\n            items: {\n              type: 'string',\n            },\n            type: 'array',\n          },\n          next: {\n            default: false,\n            type: 'boolean',\n          },\n        },\n        type: 'object',\n      },\n    ],\n    type: 'suggestion',\n  },\n});\n"],"file":"requireYieldsCheck.js"}